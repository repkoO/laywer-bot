import TelegramBot from "node-telegram-bot-api";
import dotenv from "dotenv";
import { mainMenu, servicesMenu, paymentMenu } from "./constants/menu.js";

dotenv.config();

const TOKEN = process.env.ACCESS_TOKEN;
const bot = new TelegramBot(TOKEN, { polling: true });

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start|\/help/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", mainMenu);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é)
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  if (text === '–£—Å–ª—É–≥–∏') {
    showServices(chatId);
  } else if (text === '–Ω–∞—Å') {
    bot.sendMessage(chatId, "–ú—ã - –ª—É—á—à–∞—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è!");
  } else if (text === 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã') {
    bot.sendMessage(chatId, "–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:\n–¢–µ–ª–µ—Ñ–æ–Ω: +7 XXX XXX-XX-XX\nEmail: info@example.com");
  } else if (text === 'üõí –ú–æ–∏ –∑–∞–∫–∞–∑—ã') {
    bot.sendMessage(chatId, "–ó–¥–µ—Å—å –±—É–¥—É—Ç –≤–∞—à–∏ –∑–∞–∫–∞–∑—ã...");
  }
});

// –ü–æ–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥–∏ (inline-–∫–Ω–æ–ø–∫–∏)
function showServices(chatId) {
  // –°–Ω–∞—á–∞–ª–∞ —Å–∫—Ä—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  bot.sendMessage(
    chatId,
    "‚åõ –ó–∞–≥—Ä—É–∂–∞–µ–º —É—Å–ª—É–≥–∏...",
    { reply_markup: { remove_keyboard: true } }
  ).then(() => {
    // –ó–∞—Ç–µ–º –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ª—É–≥–∏
    bot.sendMessage(
      chatId,
      "–¢—É—Ç –Ω—É–∂–µ–Ω —Ç–µ–∫—Å—Ç –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –æ–±—â–∏–µ —É—Å–ª—É–≥–∏",
      servicesMenu
    );
  });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–Ω–æ–ø–æ–∫
bot.on('callback_query', (callbackQuery) => {
  const message = callbackQuery.message;
  const chatId = message.chat.id;
  const data = callbackQuery.data;

  if (data.startsWith('service_')) {
    const serviceNumber = data.split('_')[1];
    showServiceDetails(chatId, serviceNumber);
  } else if (data === 'back_to_services') {
    showServices(chatId);
  } else if (data === 'back_to_main') {
    bot.sendMessage(chatId, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', mainMenu);
  } else if (data === 'make_payment') {
    processPayment(chatId);
  }

  bot.answerCallbackQuery(callbackQuery.id);
});

function showServiceDetails(chatId, serviceNumber) {
  const services = {
    '1': { name: "–ü–æ–¥–∞—á–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –†–æ—Å–∫–æ–º–Ω–∞–¥–∑–æ—Ä", price: '–¶–µ–Ω–∞ —É—Å–ª—É–≥–∏', description: "–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏" },
    '2': { name: "–ü–∞–∫–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤", price: '–¶–µ–Ω–∞ —É—Å–ª—É–≥–∏', description: "–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏" },
    '3': { name: "–†–µ–∫–ª–∞–º–∞ –ø–æ –Ω–æ–≤—ã–º –ø—Ä–∞–≤–∏–ª–∞–º", price: '–¶–µ–Ω–∞ —É—Å–ª—É–≥–∏', description: "–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏" }
  };

  const service = services[serviceNumber];

  bot.sendMessage(
    chatId,
    `üéØ ${service.name}\n\n` +
    `üìù ${service.description}\n\n` +
    `üí∞ –¶–µ–Ω–∞: ${service.price}‚ÇΩ\n\n` +
    `–î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:`,
    paymentMenu
  );
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–ª–∞—Ç—ã
function processPayment(chatId) {
  // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π
  // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∏–º–∏—Ç–∞—Ü–∏—è

  bot.sendMessage(
    chatId,
    "üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã...\n\n" +
    "–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —É—Å–ª—É–≥–µ."
  );

  // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã "—É—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞"
  setTimeout(() => {
    bot.sendMessage(
      chatId,
      "‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n\n" +
      "–í–∞—à–∞ —É—Å–ª—É–≥–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤."
    );
  }, 2000);
}

console.log("Bot started!");